---

---

<form
	class="grid w-full grid-cols-1 gap-4"
	x-data="{ name: '', email: '', message: '', errors: {}, status: 'error' }"
	@submit.prevent="submitForm"
>
	<div>
		<input
			x-model="name"
			type="text"
			placeholder="Name"
			class="h-14 w-full cursor-text rounded-lg border-2 border-transparent bg-gray-200 p-4 text-base text-neutral-900 outline-none focus:ring-2 focus:ring-neutral-900 focus:ring-offset-0"
			:class="{ 'ring-red-500 ring-2 focus:ring-red-500': errors.name }"
			@blur="validateField"
			id="name"
		/>
		<p
			x-show="errors.name"
			class="mb-0 mt-2 text-sm text-red-500"
			x-text="errors.name"
			style="display: none;"
		>
		</p>
	</div>
	<div>
		<input
			x-model="email"
			type="email"
			placeholder="Email"
			class="h-14 w-full cursor-text rounded-lg bg-gray-200 p-4 text-base text-neutral-900 outline-none focus:ring-2 focus:ring-neutral-900 focus:ring-offset-0"
			:class="{ 'ring-red-500 ring-2 focus:ring-red-500': errors.email }"
			@blur="validateField"
			id="email"
		/>
		<p
			x-show="errors.email"
			class="mb-0 mt-2 text-sm text-red-500"
			x-text="errors.email"
			style="display: none;"
		>
		</p>
	</div>

	<div>
		<textarea
			x-model="message"
			class="h-48 w-full cursor-text resize-y rounded-lg bg-gray-200 p-4 text-base text-neutral-900 outline-none focus:ring-2 focus:ring-neutral-900 focus:ring-offset-0"
			placeholder="Message"
			:class="{ 'ring-red-500 ring-2 focus:ring-red-500': errors.message }"
			id="message"
			@blur="validateField"></textarea>
		<p
			x-show="errors.message"
			class="mb-0 mt-2 text-sm text-red-500"
			x-text="errors.message"
			style="display: none;"
		>
		</p>
	</div>

	<button
		type="submit"
		class="inline-block h-14 cursor-pointer items-start rounded-lg bg-neutral-900 p-4 text-center text-lg font-semibold text-neutral-100
        outline-none transition-colors hover:bg-neutral-800 focus:bg-neutral-800 focus:ring-2 focus:ring-neutral-900 focus:ring-offset-2"
		:disabled="status === 'submitting'"
		>Send message
	</button>
</form>

<script is:inline>
	const emailRegex =
		/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

	function validateField(e) {
		if (!e) return;
		const field = e.target.id;
		this.errors[field] = '';

		if (field === 'name' && !this.name) {
			this.errors.name = 'Name is required.';
		}

		if (field === 'email') {
			if (!this.email) {
				this.errors.email = 'Email is required.';
			} else if (!emailRegex.test(this.email)) {
				this.errors.email = 'Email is not valid.';
			}
		}

		if (field === 'message' && !this.message) {
			this.errors.message = 'message is required.';
		}
	}

	function validateForm() {
		this.errors = {};
		if (!this.name) {
			this.errors.name = 'Full name is required.';
		}
		if (!this.email) {
			this.errors.email = 'Email is required.';
		} else if (!emailRegex.test(this.email)) {
			this.errors.email = 'Email is not valid.';
		}
		if (!this.message) {
			this.errors.message = 'message is required.';
		}
	}

	function submitForm() {
		validateForm.call(this);

		if (Object.keys(this.errors).length === 0) {
			// Add your logic to submit to your backend server here.
			this.status = 'submitting';
			// Submit form
			fetch('/message', {
				method: 'POST',
				body: JSON.stringify({
					link: '{{{link}}}',
					formData: {
						name: this.name,
						email: this.email,
						message: this.message,
					},
					captchaToken: token,
				}),
				headers: {
					'Content-Type': 'application/json',
				},
			})
				.then((response) => {
					if (response.ok) {
						this.status = 'submitted';
					} else {
						throw new Error('Failed to submit form');
					}
				})
				.catch((error) => {
					console.error(error);
					this.status = 'error';
					window.dispatchEvent(
						new CustomEvent('toast-show', {
							detail: { message: error.message || 'Something went wrong', type: 'error' },
						}),
					);
				})
				.finally(() => {
					this.name = '';
					this.email = '';
					this.message = '';
				});
		}
	}
</script>
