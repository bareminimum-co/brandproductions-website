---
import { Image } from 'astro:assets';
import MainLayout from '~/layouts/MainLayout.astro';
import BrandsTicker from '~/components/BrandsTicker.astro';
import { getCollection } from 'astro:content';

const allServices = await getCollection('services');
---

<style>
  .b1 {
    @apply bg-brand;
    box-shadow: inset -25px -15px 40px rgba(0, 0, 0, 0.3);
    background-image: linear-gradient(-45deg, rgba(255, 255, 220, 0.3) 0%, transparent 100%);
  }
</style>

<MainLayout>
  <div class="h-full bg-neutral-100">
    <!-- banner -->
    <section class="flex min-h-96 items-center py-20 pb-24 xl:min-h-[calc(100svh-220px)]">
      <div
        class="mx-auto flex w-full max-w-screen-lg items-center px-6 lg:px-14 xl:max-w-screen-2xl xl:px-24"
      >
        <div class="relative flex w-full flex-col items-center justify-center xl:gap-6">
          <div class="relative mb-8">
            <!-- 3d animating circle -->
            <div
              class="b1 h-24 w-24 animate-[--animation-float] rounded-full md:h-32 md:w-32 xl:hidden"
              id="banner-ball-small"
            >
            </div>
          </div>
          <div class="flex w-full justify-center self-start xl:justify-start">
            <div class="overflow-clip">
              <h1
                class="heading-1 invisible font-normal text-brand md:text-8xl xl:text-[10rem]"
                id="banner-title-1"
                aria-label="Production"
              >
                Production
              </h1>
            </div>
            <div class="relative hidden xl:block">
              <!-- 3d animating circle -->

              <div
                class="b1 invisible absolute bottom-0 left-16 h-24 w-24 rounded-full xl:h-56 xl:w-56"
                id="banner-ball"
              >
              </div>
            </div>
          </div>
          <div class="flex w-full flex-col items-center justify-center xl:flex-row xl:justify-end">
            <div class="-mb-4 overflow-clip pb-4">
              <h1
                class="heading-1 invisible font-normal text-neutral-900 md:text-8xl xl:text-[10rem]"
                id="banner-title-2"
                aria-label="Agency"
              >
                Agency
              </h1>
            </div>
            <div
              class="bottom-0 left-0 mt-8 max-w-[30rem] overflow-hidden text-balance text-center text-neutral-700 md:text-lg xl:absolute xl:text-left"
            >
              <p id="banner-desc" class="invisible">
                We are experts in the field of Signage, Outdoor Advertising, In-Store Branding, and
                Retail Displays. Our comprehensive branding solutions provide a unified and
                impactful brand presence across multiple channels.
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>
    <!-- Brands ticker -->
    <BrandsTicker />
    <!-- Our services -->
    <section class="py-20 pb-24" id="services">
      <div class="mx-auto max-w-screen-lg px-6 lg:px-14 xl:max-w-screen-2xl xl:px-24">
        <div class="-mb-4 overflow-clip pb-4">
          <h1 class="heading-1 invisible text-neutral-900">
            <span class="text-brand">Our</span> Services
          </h1>
        </div>
        <section class="cards-container pb-52 pt-12 lg:pb-[400px] lg:pt-24">
          <div>
            <div class="cards">
              {
                allServices.map((service, index) => (
                  <div class="card mb-32 flex max-h-[680px] w-full flex-col overflow-hidden rounded-3xl bg-slate-50 lg:mb-56">
                    <div class="heading-4 relative flex w-full items-center gap-4 rounded-t-3xl bg-neutral-900 px-4 py-8 text-slate-50 md:px-10">
                      <span>0{index + 1}</span>
                      <span>{service.data.title}</span>
                    </div>
                    <div class="relative flex flex-1 flex-col md:gap-6 md:px-10 md:py-8">
                      <div class="grid grid-cols-1 gap-4 lg:grid-cols-3 lg:grid-rows-[repeat(2,200px)]">
                        <div class="grid-cols-1 lg:col-span-2 lg:row-span-2">
                          <img
                            {...service.data.cover}
                            class="h-full max-h-48 w-full object-cover md:rounded-3xl lg:max-h-max"
                          />
                        </div>
                        <div class="hidden lg:row-span-1 lg:block">
                          <img
                            {...service.data.image1}
                            class="h-full w-full rounded-3xl object-cover"
                          />
                        </div>
                        <div class="hidden lg:row-span-1 lg:block">
                          <img
                            {...service.data.image2}
                            class="h-full w-full rounded-3xl object-cover"
                          />
                        </div>
                      </div>
                      <div class="flex flex-col gap-4 p-6 md:grid md:grid-cols-3 md:p-0">
                        <div class="col-span-2">
                          <p class="text-base text-neutral-900">{service.data.description}</p>
                        </div>
                        <div class="col-span-1 flex items-center md:justify-end">
                          <a
                            class="whitespace-no-wrap group inline-flex items-center justify-center rounded-full border bg-neutral-900 px-5 py-3 text-sm font-medium leading-6 text-neutral-100 transition-colors duration-300 ease-in-out focus:shadow-none focus:outline-none"
                            data-rounded="rounded-md"
                            href={`/services/${service.slug}`}
                          >
                            Learn more
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              focusable="false"
                              viewBox="0 0 24 24"
                              class="ml-3 inline-block h-4 w-4 transition-transform duration-500 ease-in-out group-hover:-rotate-45 group-hover:transform"
                            >
                              <path
                                d="M15 5l-1.41 1.41L18.17 11H2v2h16.17l-4.59 4.59L15 19l7-7-7-7z"
                                fill="currentColor"
                              />
                            </svg>
                          </a>
                        </div>
                      </div>
                    </div>
                  </div>
                ))
              }
            </div>
          </div>
        </section>
        <div class="py-20">
          <div class="and-more flex flex-col items-center gap-4">
            <span class="heading-5 text-neutral-900">And more</span>
            <a
              class="whitespace-no-wrap group inline-flex items-center justify-center rounded-full border bg-neutral-900 px-6 py-4 text-base font-medium leading-6 text-neutral-100 transition-colors duration-300 ease-in-out focus:shadow-none focus:outline-none"
              data-rounded="rounded-md"
              href={`/services/`}
            >
              View all services
              <svg
                xmlns="http://www.w3.org/2000/svg"
                focusable="false"
                viewBox="0 0 24 24"
                class="ml-3 inline-block h-5 w-5 transition-transform duration-500 ease-in-out group-hover:-rotate-45 group-hover:transform"
              >
                <path
                  d="M15 5l-1.41 1.41L18.17 11H2v2h16.17l-4.59 4.59L15 19l7-7-7-7z"
                  fill="currentColor"></path>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </section>
  </div>
</MainLayout>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  const mm = gsap.matchMedia();

  mm.add(
    {
      desktop: '(min-width: 1024px)',
      mobile: '(max-width: 1023px)',
    },
    (context) => {
      const { desktop } = context?.conditions || {};
      const tl = gsap
        .timeline({
          defaults: {
            opacity: 0,
            ease: 'power3.inOut',
            autoAlpha: 0,
          },
        })
        .from(
          '#banner-ball',
          { zIndex: 10, scale: 20, opacity: 1, duration: 1.5, backgroundColor: 'white' },
          // '-=0.5',
        )
        .to('#banner-ball', { y: 30, opacity: 1, duration: 1, visibility: 'visible' }, '<')
        .from(
          '#banner-title-1, #banner-title-2',
          { y: 100, duration: 1, stagger: 0.5 },
          desktop ? '+' : '-=1.5',
        )
        .to('#banner-ball', { y: -50, duration: 1, opacity: 1, visibility: 'visible' }, '<0.8')
        .to('#banner-ball', { y: 0, duration: 1.2, opacity: 1, visibility: 'visible' }, '<0.85')
        .set(
          '#banner-ball',
          { animation: 'var(--animation-float)', opacity: 1, visibility: 'visible' },
          '<0.85',
        )
        .from('#banner-desc', { opacity: 0 }, '-=1.5')
        .from('#brands-ticker', { opacity: 0 }, '-=1.5');
    },
  );

  gsap
    .timeline({
      scrollTrigger: {
        trigger: '#services',
        start: 'top bottom-=300px',
        // end: '+=100px',
        // scrub: true,
        // markers: true,
        // toggleActions: 'restart none none reverse',
        // invalidateOnRefresh: true,
      },
    })
    .from(
      '#services h1',
      {
        opacity: 0,
        y: 100,
        ease: 'power3.inOut',
        duration: 1,
        autoAlpha: 0,
      },
      // '-=0.5',
    )
    .from(
      '#services .cards-container',
      {
        opacity: 0,
        ease: 'expo.inOut',
        duration: 1,
      },
      '<=0.1',
    );

  const cards = gsap.utils.toArray<Element>('.card');
  const spacer = 140;
  const minScale = 0.5;

  // const distributor = gsap.utils.distribute({ base: minScale, amount: 0.2 });

  cards.forEach((card, index) => {
    // const scaleVal = distributor(index, cards[index], cards);

    const tween = gsap.to(card, {
      scrollTrigger: {
        trigger: card,
        start: `top+=${100} top`,
        scrub: true,
        // markers: true,
        invalidateOnRefresh: true,
      },
      // immediateRender: false,
      ease: 'none',
      scale: index === cards.length - 1 ? 1 : minScale,
      opacity: index === cards.length - 1 ? 1 : 0,
    });

    ScrollTrigger.create({
      trigger: card,
      start: `top-=${150} top`,
      endTrigger: '.cards',
      end: `bottom top+=${200 + spacer}`,
      pin: true,
      pinSpacing: false,
      // markers: true,
      id: 'pin',
      // pinType: 'transform',
      invalidateOnRefresh: true,
      // immediateRender: false,
    });
  });

  gsap.from('.and-more > *', {
    scrollTrigger: {
      trigger: '.and-more',
      start: 'top bottom',
      // pinType: 'transform',
      // invalidateOnRefresh: true,
    },
    opacity: 0,
    y: 20,
    stagger: 0.5,
    ease: 'power3.inOut',
    duration: 1,
  });
</script>
